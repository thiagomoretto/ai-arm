%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 33 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.745098 0.352941 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.745098 0.352941 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 1.000000 1.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/WhiteLev 33 def
/ColorR [0.000000 
0.114000 0.587000 0.701000 0.299000 0.413000 0.886000 1.000000 0.064376 0.078682 0.092988 
0.746498 0.331482 0.405145 0.478808 0.395859 0.483827 0.571796 0.168847 0.206369 0.243890 
0.233224 0.285051 0.336878 0.260580 0.334933 0.446118 0.650875 0.738843 0.826812 0.914780 
0.793922 0.774157 0.426706 0.0 1.0] def
/ColorG [0.000000 
0.114000 0.587000 0.701000 0.299000 0.413000 0.886000 1.000000 0.064376 0.078682 0.092988 
0.746498 0.331482 0.405145 0.478808 0.395859 0.483827 0.571796 0.168847 0.206369 0.243890 
0.233224 0.285051 0.336878 0.260580 0.334933 0.446118 0.650875 0.738843 0.826812 0.914780 
0.793922 0.774157 0.426706 0.0 1.0] def
/ColorB [0.000000 
0.114000 0.587000 0.701000 0.299000 0.413000 0.886000 1.000000 0.064376 0.078682 0.092988 
0.746498 0.331482 0.405145 0.478808 0.395859 0.483827 0.571796 0.168847 0.206369 0.243890 
0.233224 0.285051 0.336878 0.260580 0.334933 0.446118 0.650875 0.738843 0.826812 0.914780 
0.793922 0.774157 0.426706 0.0 1.0] def
%--use color 1 
%--end use color 1 
34 Setcolor
/background 35 def PaintBackground
/background 35 def PaintBackground
/background 35 def PaintBackground
/background 35 def PaintBackground
33 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
33 Setcolor
35 Setcolor
 (drawpoly) 10 [ -36]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
35 Setcolor
/absolu true def
33 Setcolor
[] 0 setdash
33 Setcolor
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 62 [ 0]
[879 1666 1007 2017 1136 2821 1264 3281 1393 2917 1521 2009 1650 1340 1779 1476 1907 2244 2036 2893 
2164 2782 2293 1974 2421 1170 2550 1074 2679 1738 2807 2518 2936 2666 3064 2015 3193 1136 3321 811 
3450 1313 3579 2158 3707 2547 3836 2102 3964 1213 4093 680 4221 976 4350 1815 4479 2410 4607 2202 
4736 1371 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[3321 1141 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[3321 1141 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(1) 3450 1215 0  0.00 [3450 1115 55 99] Show
%Latex:\myput{3450}{3025}{5}{1}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[3193 639 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[3193 639 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(2) 3321 713 0  0.00 [3321 613 55 99] Show
%Latex:\myput{3321}{3527}{5}{2}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[3064 964 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[3064 964 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(3) 3193 1039 0  0.00 [3193 939 55 99] Show
%Latex:\myput{3193}{3201}{5}{3}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2936 1843 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2936 1843 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(4) 3064 1917 0  0.00 [3064 1817 55 99] Show
%Latex:\myput{3064}{2323}{5}{4}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2807 2494 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2807 2494 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(5) 2936 2568 0  0.00 [2936 2468 55 99] Show
%Latex:\myput{2936}{1672}{5}{5}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2679 2346 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2679 2346 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(6) 2807 2421 0  0.00 [2807 2321 55 99] Show
%Latex:\myput{2807}{1819}{5}{6}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2550 1566 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2550 1566 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(7) 2679 1641 0  0.00 [2679 1541 55 99] Show
%Latex:\myput{2679}{2599}{5}{7}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2550 1566 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2550 1566 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(7) 2679 1641 0  0.00 [2679 1541 55 99] Show
%Latex:\myput{2679}{2599}{5}{7}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2421 902 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2421 902 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(8) 2550 977 0  0.00 [2550 877 55 99] Show
%Latex:\myput{2550}{3263}{5}{8}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2293 998 189 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2293 998 189 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(9) 2421 1073 0  0.00 [2421 973 55 99] Show
%Latex:\myput{2421}{3167}{5}{9}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2164 1801 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2164 1801 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(10) 2293 1876 0  0.00 [2293 1776 111 99] Show
%Latex:\myput{2293}{2364}{5}{10}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[2036 2610 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[2036 2610 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(11) 2164 2685 0  0.00 [2164 2585 111 99] Show
%Latex:\myput{2164}{1555}{5}{11}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1907 2720 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1907 2720 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(12) 2036 2795 0  0.00 [2036 2695 111 99] Show
%Latex:\myput{2036}{1445}{5}{12}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1779 2072 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1779 2072 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(13) 1907 2146 0  0.00 [1907 2046 111 99] Show
%Latex:\myput{1907}{2094}{5}{13}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1650 1304 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1650 1304 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(14) 1779 1378 0  0.00 [1779 1278 111 99] Show
%Latex:\myput{1779}{2862}{5}{14}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1521 1168 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1521 1168 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(15) 1650 1242 0  0.00 [1650 1142 111 99] Show
%Latex:\myput{1650}{2998}{5}{15}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1393 1837 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1393 1837 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(16) 1521 1911 0  0.00 [1521 1811 111 99] Show
%Latex:\myput{1521}{2329}{5}{16}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1264 2745 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1264 2745 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(17) 1393 2819 0  0.00 [1393 2719 111 99] Show
%Latex:\myput{1393}{1421}{5}{17}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1136 3109 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1136 3109 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(18) 1264 3184 0  0.00 [1264 3084 111 99] Show
%Latex:\myput{1264}{1056}{5}{18}
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
 (drawbox) 4 [ 33]
[1007 2649 249 83 
] dogrey 
32 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
33 Setcolor
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1007 2649 249 83 
] dogrey 
33 Setcolor
-1 -1 200000 200000 setclipzone
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(19) 1136 2724 0  0.00 [1136 2624 111 99] Show
%Latex:\myput{1136}{1516}{5}{19}
33 Setcolor
5 Thickness
[] 0 setdash
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
34 Setcolor
(0) 723 3873 0  0.00 [723 3773 55 99] Show
%Latex:\myput{723}{367}{5}{0}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 3710 750 3773 
] dogrey 
33 Setcolor
34 Setcolor
(5) 1366 3873 0  0.00 [1366 3773 55 99] Show
%Latex:\myput{1366}{367}{5}{5}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[1393 3710 1393 3773 
] dogrey 
33 Setcolor
34 Setcolor
(10) 1981 3873 0  0.00 [1981 3773 111 99] Show
%Latex:\myput{1981}{367}{5}{10}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[2036 3710 2036 3773 
] dogrey 
33 Setcolor
34 Setcolor
(15) 2624 3873 0  0.00 [2624 3773 111 99] Show
%Latex:\myput{2624}{367}{5}{15}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[2679 3710 2679 3773 
] dogrey 
33 Setcolor
34 Setcolor
(20) 3266 3873 0  0.00 [3266 3773 111 99] Show
%Latex:\myput{3266}{367}{5}{20}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[3321 3710 3321 3773 
] dogrey 
33 Setcolor
34 Setcolor
(25) 3909 3873 0  0.00 [3909 3773 111 99] Show
%Latex:\myput{3909}{367}{5}{25}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[3964 3710 3964 3773 
] dogrey 
33 Setcolor
34 Setcolor
(30) 4552 3873 0  0.00 [4552 3773 111 99] Show
%Latex:\myput{4552}{367}{5}{30}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[4607 3710 4607 3773 
] dogrey 
33 Setcolor
34 Setcolor
(35) 5195 3873 0  0.00 [5195 3773 111 99] Show
%Latex:\myput{5195}{367}{5}{35}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[5250 3710 5250 3773 
] dogrey 
33 Setcolor
 (drawsegs) 4 [ 33]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[964 3710 964 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[1179 3710 1179 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[1393 3710 1393 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[1607 3710 1607 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[1821 3710 1821 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[2036 3710 2036 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[2464 3710 2464 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[2679 3710 2679 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[2893 3710 2893 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[3107 3710 3107 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[3321 3710 3321 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[3536 3710 3536 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[3964 3710 3964 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[4179 3710 4179 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[4393 3710 4393 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[4607 3710 4607 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[4821 3710 4821 3757 
] dogrey 
 (drawsegs) 4 [ 33]
[5036 3710 5036 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
34 Setcolor
(-2500) 423 3748 0  0.00 [423 3648 255 99] Show
%Latex:\myput{423}{492}{5}{-2500}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 3710 690 3710 
] dogrey 
33 Setcolor
34 Setcolor
(-2000) 423 3294 0  0.00 [423 3194 255 99] Show
%Latex:\myput{423}{946}{5}{-2000}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 3256 690 3256 
] dogrey 
33 Setcolor
34 Setcolor
(-1500) 423 2839 0  0.00 [423 2739 255 99] Show
%Latex:\myput{423}{1401}{5}{-1500}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 2801 690 2801 
] dogrey 
33 Setcolor
34 Setcolor
(-1000) 423 2385 0  0.00 [423 2285 255 99] Show
%Latex:\myput{423}{1855}{5}{-1000}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 2347 690 2347 
] dogrey 
33 Setcolor
34 Setcolor
(-500) 478 1931 0  0.00 [478 1831 200 99] Show
%Latex:\myput{478}{2309}{5}{-500}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 1893 690 1893 
] dogrey 
33 Setcolor
34 Setcolor
(0) 623 1477 0  0.00 [623 1377 55 99] Show
%Latex:\myput{623}{2763}{5}{0}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 1439 690 1439 
] dogrey 
33 Setcolor
34 Setcolor
(500) 512 1022 0  0.00 [512 922 166 99] Show
%Latex:\myput{512}{3218}{5}{500}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 984 690 984 
] dogrey 
33 Setcolor
34 Setcolor
(1000) 456 568 0  0.00 [456 468 222 99] Show
%Latex:\myput{456}{3672}{5}{1000}
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 530 690 530 
] dogrey 
33 Setcolor
 (drawsegs) 4 [ 33]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 33]
[750 3559 705 3559 
] dogrey 
 (drawsegs) 4 [ 33]
[750 3407 705 3407 
] dogrey 
 (drawsegs) 4 [ 33]
[750 3256 705 3256 
] dogrey 
 (drawsegs) 4 [ 33]
[750 3104 705 3104 
] dogrey 
 (drawsegs) 4 [ 33]
[750 2953 705 2953 
] dogrey 
 (drawsegs) 4 [ 33]
[750 2801 705 2801 
] dogrey 
 (drawsegs) 4 [ 33]
[750 2650 705 2650 
] dogrey 
 (drawsegs) 4 [ 33]
[750 2499 705 2499 
] dogrey 
 (drawsegs) 4 [ 33]
[750 2347 705 2347 
] dogrey 
 (drawsegs) 4 [ 33]
[750 2196 705 2196 
] dogrey 
 (drawsegs) 4 [ 33]
[750 2044 705 2044 
] dogrey 
 (drawsegs) 4 [ 33]
[750 1893 705 1893 
] dogrey 
 (drawsegs) 4 [ 33]
[750 1741 705 1741 
] dogrey 
 (drawsegs) 4 [ 33]
[750 1590 705 1590 
] dogrey 
 (drawsegs) 4 [ 33]
[750 1439 705 1439 
] dogrey 
 (drawsegs) 4 [ 33]
[750 1287 705 1287 
] dogrey 
 (drawsegs) 4 [ 33]
[750 1136 705 1136 
] dogrey 
 (drawsegs) 4 [ 33]
[750 984 705 984 
] dogrey 
 (drawsegs) 4 [ 33]
[750 833 705 833 
] dogrey 
 (drawsegs) 4 [ 33]
[750 681 705 681 
] dogrey 
33 Setcolor
 (drawsegs) 4 [ 33]
[750 3710 5250 3710 
] dogrey 
33 Setcolor
33 Setcolor
 (drawsegs) 4 [ 33]
[750 3710 750 530 
] dogrey 
33 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
33 Setcolor
[] 0 setdash
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
34 Setcolor
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
34 Setcolor
34 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
34 Setcolor
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

